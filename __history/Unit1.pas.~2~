unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Grids, Vcl.StdCtrls,ComObj;

type
  TForm1 = class(TForm)
    memoInpCode: TMemo;
    StringGrid1: TStringGrid;
    btnOK: TButton;
    OpenDialog1: TOpenDialog;
    Button1: TButton;
    procedure btnOKClick(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
      function GetExcelFileName: String;
  public
    { Public declarations }
  end;

var
  Form1: TForm1;
  isOK: boolean;
implementation

{$R *.dfm}



const
  EXCEL_FILE_EXT = '.xls';

function TForm1.GetExcelFileName: String;
begin
  if OpenDialog1.Execute then
  Result := OpenDialog1.FileName;

  if LowerCase(ExtractFileExt(Result)) <> EXCEL_FILE_EXT then
    Result := Result + EXCEL_FILE_EXT;
end;



procedure TForm1.btnOKClick(Sender: TObject);
var
 ExcelApp, Sheet: variant;
 Col, Row: Word;
begin
  ExcelApp := CreateOleObject('Excel.Application');
  try
    ExcelApp.Visible := false;

    ExcelApp.Workbooks.Add;
    Sheet := ExcelApp.ActiveWorkbook.Worksheets[1];

    for Col := 0 to StringGrid1.ColCount - 1 do
      for Row := 0 to StringGrid1.RowCount - 1 do
        Sheet.Cells[Row + 1, Col + 1] := StringGrid1.Cells[Col, Row];

    ExcelApp.ActiveWorkbook.SaveAs(GetExcelFileName);

    ShowMessage('Ok!');
  finally
    ExcelApp.Application.Quit;
    ExcelApp := unassigned;
  end;
end;

procedure TForm1.Button1Click(Sender: TObject);
var i,j:integer;
    curr:string;
    b1, b2:integer;
begin
  //showmessage( inttostr( Length(memoInpCode.Text)) );
  j:=1;
  StringGrid1.Cells[0,0] := 'Имя подпрограммы';
  StringGrid1.Cells[2,0] := 'Заголовок подпрограммы';
  for I := 0 to memoInpCode.Lines.Count-1 do
  begin
    if pos('implementation', memoInpCode.Lines[i]) > 0 then
    begin
      isOk := true;
    end;
    b1 := pos('PROCEDURE',AnsiUpperCase(memoInpCode.Lines[i]));
    b2 := pos('FUNCTION', memoInpCode.Lines[i]);
    if isOk and
    ( b1 > 0)
    or
    (b2 > 0) then
    begin
      curr:=  memoInpCode.Lines[i];
      curr := trim(curr);
      StringGrid1.Cells[2,j] := curr;
      if b1 > 0 then
      begin
        curr := copy(curr, b1+9, length(curr) - b1 - 9);
      end
      else
      begin
        curr := copy(curr, b1+8, length(curr) - b1 - 8);
      end;
      if UpperCase(curr[1]) = 'T' then
      begin
        delete(curr,1, pos('.', curr));
      end;
      if pos('(', curr) <> 0 then
        curr := copy(curr,0, pos('(', curr)-1);
      StringGrid1.Cells[0,j] := curr;
      inc(j);
    end;

  end;

end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  isOk := false;
end;

end.
